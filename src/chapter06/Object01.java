package chapter06;

//클래스 외부 3 가지 : 패키지, import, 외부 클래스 



public class Object01 {
	
	//클래스 내부 4 가지 :
		//필드 (멤버변수) : 클래스 블락에 선언된 변수를 필드라 호칭
				//메소드 내에서 선언한 변수를 지역변수라 호칭
	
		//메소드 (멤버메소드) : 함수를 객체지향언어에서는 메소드라 호칭.
			// void main (){
			// }
		//생성자 : 객체를 생성할 때 필드의 값을 초기화 시켜주는 작업 
			//- 리턴 타입이 있으면 안됨.
			//- 객체 이름과 동일한 이름의 메소드
		//내부 클래스 : 클래스 내부의 클래스 (Inner Class)
			
	
		

	public static void main(String[] args) {
		// 절차지향 프로그램 : C, 람보르기니(한 번 고장나면 그 회사에 가져가야함.)
				//장점 : 성능이 매우 우수하다. OS (Windows/Linux/Unix) : c, c++
				//단점 : 프로그래밍 어려움.
						//유지보수 어려움.
						//문제가 생기면 전체 코드를 모두 수정해야함.
		// 객체지향 프로그램 : Java, C++, 현대 자동차(규격만 있으면 여러회사에서 만든것 가져다 끼우면됨)
				//장점 : 모든 것들을 객체화해서 프로그래밍 함.
						//코드가 간결함.
						//문제가 생겼을 떄 유지보수하기가 쉬움.
						//문제가 생긴 객체만 수정
						//완성된 프로그램은 각 각의 객체를 조합해서 완성.
		
				//단점 : 성능이 절치지향에 비해 느릴 수 있음.
		
		//클래스 (class) : 객체를 생성하기 위한 틀, 붕어빵 기계 (틀)
		//객체 (Object) / 인스턴스 (instance) : class를 기준으로 생성된 메모리에서 실행되는 프로그램.
			//붕어빵. 
		
		//클래스 외부에 올 수 있는 3가지 : 
			//- 패키지 : 클래스를 조직화하는 폴더
			//- import : 동일한 패키지에 존재하지 않는 클래스는 import
			//- 외부 클래스
		//클래스 내부에 올 수 있는 4가지 : 
		

	}

}
